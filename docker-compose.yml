services:

  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    volumes:
      - kafka-data:/var/lib/kafka
    healthcheck:
      test: ["CMD", "kafka-cluster", "cluster-id"]
      interval: 10s
      timeout: 5s
      retries: 10

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    depends_on:
      - kafka

  postgres-db:
    image: postgres:17-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: pgdb
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpass
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  axon-server:
    image: axoniq/axonserver:latest
    container_name: axon-server
    ports:
      - "8024:8024"  # HTTP Dashboard (UI)
      - "8124:8124"  # gRPC (Axon apps connect here)
    environment:
      AXONIQ_AXONSERVER_NAME: axon-server
      AXONIQ_AXONSERVER_HOSTNAME: axon-server
    volumes:
      - axon-data:/axonserver/data
      - axon-events:/axonserver/events

volumes:
  pg_data:
  axon-data:
  axon-events:
  kafka-data:
