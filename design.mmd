graph TD
UI[UI Frontend] --> GW[API Gateway]

GW --> AUTH[Auth Service]
GW --> RES[Reservation Service]

RES --> TOB[Transactional Outbox]
TOB --> SCH[Scheduler]
SCH --> KAFKA_RES_TOPIC[Kafka: reservation-service.bookings]

KAFKA_RES_TOPIC --> EDC1[EventDeduplicationCache]
EDC1 --> ORC[Booking Orchestrator Service]

ORC --> FLIGHT[Flight Service]
ORC --> PAY[Payment Service]

FLIGHT --> KAFKA_FLIGHT_TOPIC[Kafka: flight-service.events]
KAFKA_FLIGHT_TOPIC --> FQ[Flight Query Service]

KAFKA_FLIGHT_TOPIC --> EDC2[EventDeduplicationCache]
EDC2 --> FQ

PAY --> KAFKA_PAYMENT_TOPIC[Kafka: payment-service.payments]

%% Databases
RES --> PGRES[(PostgreSQL)]
ORC --> PGBOOK[(PostgreSQL)]
FLIGHT --> PGFLIGHT[(PostgreSQL)]
FQ --> PGQUERY[(PostgreSQL)]
PAY --> PGPAY[(PostgreSQL)]

%% Axon Server
RES --> AXON[Axon Server]
ORC --> AXON
FLIGHT --> AXON
FQ --> AXON
PAY --> AXON

%% Monitoring
RES --> OTEL[OpenTelemetry<br/>Java Agent]
ORC --> OTEL
FLIGHT --> OTEL
FQ --> OTEL
PAY --> OTEL

%% Additional monitoring
RES --> PROM[Prometheus]
ORC --> PROM
FLIGHT --> PROM
FQ --> PROM
PAY --> PROM
PROM --> GRAF[Grafana]

OTEL --> JAEGER[Jaeger]

%% Kafka UI
%%KAFKA_RES_TOPIC     --> KAFDROP[Kafdrop]
%%KAFKA_FLIGHT_TOPIC  --> KAFDROP
%%KAFKA_PAYMENT_TOPIC --> KAFDROP

%% Saga Pattern
ORC -.->|Saga Coordination| FLIGHT
ORC -.->|Saga Coordination| PAY
ORC -.->|Saga Coordination| RES

%% Event Flow
FLIGHT -.->|Flight events| KAFKA_FLIGHT_TOPIC
KAFKA_FLIGHT_TOPIC -.->|Sync flight events| FQ


